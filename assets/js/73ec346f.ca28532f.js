"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5708],{6917:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(4848),i=t(8453);const r={title:"Analyzing Ad Targeting Insights: An Introduction to the metatargetr R Package"},s=void 0,o={id:"data-analysis/04_05_metatargetr",title:"Analyzing Ad Targeting Insights: An Introduction to the metatargetr R Package",description:"<AuthorCard",source:"@site/docs/04_data-analysis/04_05_metatargetr.mdx",sourceDirName:"04_data-analysis",slug:"/data-analysis/04_05_metatargetr",permalink:"/docs/data-analysis/04_05_metatargetr",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Analyzing Ad Targeting Insights: An Introduction to the metatargetr R Package"},sidebar:"docs",previous:{title:"Data analysis using the DISARM Framework",permalink:"/docs/data-analysis/04_04_disarm-framework"},next:{title:"index",permalink:"/docs/literature/"}},d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:3},{value:"Retrieving Targeting Information for Recent Ads (<code>get_targeting</code>)",id:"retrieving-targeting-information-for-recent-ads-get_targeting",level:3},{value:"Historical Targeting Data at Scale (<code>get_targeting_db</code>)",id:"historical-targeting-data-at-scale-get_targeting_db",level:3},{value:"Analyzing DHS Ad Campaigns \ud83c\udfdb\ufe0f",id:"analyzing-dhs-ad-campaigns-\ufe0f",level:2},{value:"Retrieving and Combining Data",id:"retrieving-and-combining-data",level:3},{value:"Visualizing &quot;Detailed&quot; Targeting Criteria",id:"visualizing-detailed-targeting-criteria",level:3},{value:"Visualizing Location Targeting Criteria",id:"visualizing-location-targeting-criteria",level:3},{value:"Visualizing Top 10 Spenders using Ethnic Proxies",id:"visualizing-top-10-spenders-using-ethnic-proxies",level:3},{value:"A Glimpse into Other <code>metatargetr</code> Features",id:"a-glimpse-into-other-metatargetr-features",level:2},{value:"Facebook and Instagram Page Information",id:"facebook-and-instagram-page-information",level:3},{value:"Google Ad Data",id:"google-ad-data",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{AuthorCard:r,LanguageChip:s,LastUpdatedByChip:o,LevelChip:d,PlatformChip:l}=n;return r||g("AuthorCard",!0),s||g("LanguageChip",!0),o||g("LastUpdatedByChip",!0),d||g("LevelChip",!0),l||g("PlatformChip",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(d,{level:"Intermediate"}),"\n",(0,a.jsx)(l,{platform:"Meta"}),"\n",(0,a.jsx)(s,{lang:"R"}),"\n",(0,a.jsx)(r,{name:"Fabio Votta",avatar:"FV",avatarSrc:t(1345).A,position:"ASCoR | University of Amsterdam",website:"https://www.favstats.eu/",bluesky:"https://bsky.app/profile/favstats.eu",linkedin:"https://www.linkedin.com/in/dr-fabio-votta-81a862131"}),"\n",(0,a.jsx)(o,{authorOriginal:"Fabio Votta",createdOn:"30.07.2025"}),"\n",(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(n.p,{children:["What political messages are being sent to which audiences? By using\ndigital advertising tools provided by social media platforms,\nadvertisers can select which audiences they want to reach and are able\nto send different messages for each one of them. That is why\nunderstanding the use of target audiences is as crucial as knowing what\nis being advertised. While Meta\u2019s official Ad Library API provides a\nrange of data, its restrictive access requirements and limited targeting\ngranularity often fall short of the needs of researchers and\njournalists. The ",(0,a.jsx)(n.code,{children:"metatargetr"})," R package offers an alternative,\nunofficial route to this information, by retrieving and archiving ad\ndata directly from Meta\u2019s public-facing Ad Library."]}),"\n",(0,a.jsxs)(n.p,{children:["This tutorial focuses on how to use ",(0,a.jsx)(n.code,{children:"metatargetr"})," to retrieve and, most\nimportantly, analyze this targeting data. Unlike the official Meta Ad\nLibrary API, which provides data on an ad-by-ad basis with broad\nspending ranges, ",(0,a.jsx)(n.code,{children:"metatargetr"})," offers a unique, advertiser-level\nperspective."]}),"\n",(0,a.jsx)(n.p,{children:"Here are the key advantages over Meta\u2019s official Ad Library API:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Advertiser-Level Data:"})," Instead of looking at single ads, we get a\nconsolidated view of the entire targeting strategy of a Facebook page\nor Instagram account."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Exact Spending per Criterion:"})," The data provides the exact percentage\nof a page\u2019s total spend allocated to each specific targeting\ncriterion. This allows for precise analysis of budget allocation, a\nfeature not available through the official API."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Additional Audience Insights:"})," The dataset goes beyond the demographic\ntargeting that is available via the API, as it reveals spending on\npowerful tools like Detailed Targeting (e.g. interest profiles that\nMeta categorizes its users in), Custom Audiences (e.g., targeting a\nlist of existing customers) and Lookalike Audiences (targeting users\nsimilar to an existing audience). Furthermore, while only demographic\ntargeting (age, gender, location) is available for countries in the EU\nsince the implementation of the Digital Services Act (DSA),\n",(0,a.jsx)(n.code,{children:"metatargetr"})," provides targeting insights for all advertising pages on\nMeta in the world."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This tutorial will walk you through installing the package, retrieving\nhistorical targeting data, and using tidyverse tools to create\ncompelling visualizations that reveal these hidden strategies."}),"\n",(0,a.jsxs)(n.p,{children:["Finally, it is important to note that ",(0,a.jsx)(n.code,{children:"metatargetr"})," relies on web\nscraping. This means it can be susceptible to changes in Facebook\u2019s\nwebsite structure. While powerful, it should be considered a\ncomplementary tool to the official API. ",(0,a.jsx)(n.a,{href:"https://data-knowledge-hub.com/docs/data-collection/03_00_platform-specific%20guidelines/03_04_data-collection_meta_ads",children:"For a guide on using the\nofficial Meta Ad Library API"}),", please see the other tutorial in this series."]}),"\n",(0,a.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["First, you will need to install ",(0,a.jsx)(n.code,{children:"metatargetr"})," and a few other helpful\npackages from the tidyverse ecosystem. Since ",(0,a.jsx)(n.code,{children:"metatargetr"})," is hosted on\nGitHub, we will use the pak package for a smooth installation process."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Install pak if you don\'t have it already\nif (!require("pak")) install.packages("pak")\n\n\n# Install `metatargetr` and other useful packages\npak::pak(c(\n  "favstats/metatargetr",\n  "tidyverse",\n  "lubridate",\n  "scales"\n))\n'})}),"\n",(0,a.jsx)(n.p,{children:"Now loading in the R packages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:"library(metatargetr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"retrieving-targeting-information-for-recent-ads-get_targeting",children:["Retrieving Targeting Information for Recent Ads (",(0,a.jsx)(n.code,{children:"get_targeting"}),")"]}),"\n",(0,a.jsxs)(n.p,{children:["The core function for fetching live targeting data is ",(0,a.jsx)(n.code,{children:"get_targeting()"}),".\nThis function scrapes the \u201cAudience\u201d tab of a Page\u2019s Ad Library section,\nproviding insights into the age, gender, location but also custom and\nlookalike audience targeting of their ",(0,a.jsx)(n.em,{children:"recent ads"})," (i.e. only for the\nlast 7, 30, and 90 days)."]}),"\n",(0,a.jsxs)(n.p,{children:["Let us retrieve the targeting data for a specific Facebook Page. You\nwill need the Page ID, which can be found in the URL of the page\u2019s Ad\nLibrary entry or in the ",(0,a.jsx)(n.a,{href:"https://www.facebook.com/ads/library/report/",children:"Meta Ad Library\nReport"})," (which you can\nalso query via ",(0,a.jsx)(n.code,{children:"metatargetr"})," using ",(0,a.jsx)(n.code,{children:"get_ad_report"}),")."]}),"\n",(0,a.jsx)(n.p,{children:"For example, here is the URL of the Ad Library page of the U.S.\nDepartment of Homeland Security (DHS):"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.facebook.com/ads/library/?view_all_page_id=179587888720522",children:"https://www.facebook.com/ads/library/?view_all_page_id=179587888720522"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The Page ID is the number after ",(0,a.jsx)(n.code,{children:"view_all_page_id="})," \u2192 ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"179587888720522"})}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here are the most important function parameters:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"id"}),": A character string representing the (Facebook) Page ID."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"timeframe"}),": The time period for the data. Options are \u201cLAST_7_DAYS\u201d,\n\u201cLAST_30_DAYS\u201d, or \u201cLAST_90_DAYS\u201d. The default is set at\n\u201cLAST_30_DAYS\u201d."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Let us retrieve the targeting info from a page that is currently\nconducting large digital ad campaign, the U.S. Department of Homeland\nSecurity:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Fetch targeting data for a specific page for the last 30 days\ndhs_targeting_data <- get_targeting(id = "179587888720522", timeframe = "LAST_30_DAYS")\n\n# Inspect the structure of the returned data\nglimpse(dhs_targeting_data)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'    ## Rows: 91\n    ## Columns: 15\n    ## $ value                 <chr> "All", "Women", "Men", "Spanish", "Boston (Manch\u2026\n    ## $ num_ads               <int> 15, 0, 0, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\u2026\n    ## $ total_spend_pct       <dbl> 1.00000000, 0.00000000, 0.00000000, 1.00000000, \u2026\n    ## $ type                  <chr> "gender", "gender", "gender", "language", "locat\u2026\n    ## $ location_type         <chr> NA, NA, NA, NA, "geo_markets", "COUNTY", "BOROUG\u2026\n    ## $ num_obfuscated        <int> NA, NA, NA, NA, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\u2026\n    ## $ is_exclusion          <lgl> NA, NA, NA, NA, FALSE, FALSE, FALSE, FALSE, FALS\u2026\n    ## $ detailed_type         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \u2026\n    ## $ ds                    <chr> "2025-07-24", "2025-07-24", "2025-07-24", "2025-\u2026\n    ## $ main_currency         <chr> "USD", "USD", "USD", "USD", "USD", "USD", "USD",\u2026\n    ## $ total_num_ads         <int> 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, \u2026\n    ## $ total_spend_formatted <chr> "$347,094", "$347,094", "$347,094", "$347,094", \u2026\n    ## $ is_30_day_available   <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, \u2026\n    ## $ is_90_day_available   <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, \u2026\n    ## $ page_id               <chr> "179587888720522", "179587888720522", "179587888\u2026\n'})}),"\n",(0,a.jsx)(n.p,{children:"The output will be a tibble where each row represents a specific\ndemographic or location targeting segment for the ads run by that page\nin the specified timeframe. Key columns include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"value"}),": The exact targeting criterion used."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"type"}),": The category of targeting (e.g., \u201cage\u201d, \u201cgender\u201d, \u201clocation\u201d,\netc.)."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"total_spend_pct"}),": The proportion of the page\u2019s ad spend directed at\na target audience (",(0,a.jsx)(n.code,{children:"value"}),") within the timeframe specified."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"total_spend_formatted"}),": The total ad spend of the page in the\ntimeframe specified."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"main_currency"}),": Information about the currency used by the page."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"historical-targeting-data-at-scale-get_targeting_db",children:["Historical Targeting Data at Scale (",(0,a.jsx)(n.code,{children:"get_targeting_db"}),")"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"get_targeting()"})," function is enough for retrieving targeting info\nfor specific pages that have run ads up to the last 90 days. However,\nonce 90 days have passed, Meta ",(0,a.jsx)(n.em,{children:"does not"})," provide access to this data\nanymore. This is where ",(0,a.jsx)(n.code,{children:"metatargetr"}),"\u2019s true power lies: it retrieves,\narchives, and provides access to a vast repository of pre-collected\ntargeting data for ",(0,a.jsx)(n.em,{children:"all pages running political advertisements in the\nworld"}),". This data can be accessed through the ",(0,a.jsx)(n.code,{children:"get_targeting_db()"}),"\nfunction, which downloads historical datasets have been collected since\nlate 2023."]}),"\n",(0,a.jsx)(n.p,{children:"Here are the most important function parameters:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"the_cntry"}),": The two-letter ISO country code for the desired dataset\n(e.g., \u201cDE\u201d, \u201cUS\u201d)."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"tf"}),": The timeframe in days (\u201cLAST_7_DAYS\u201d, \u201cLAST_30_DAYS\u201d,\n\u201cLAST_90_DAYS\u201d)."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ds"}),": A date string in \u201cYYYY-MM-DD\u201d format, identifying the date of\nthe specific archived dataset."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["A tip before you download a historical dataset: the\n",(0,a.jsx)(n.code,{children:"get_targeting_metadata()"})," function allows you to see the available\ndates for a given country and timeframe as the automated retrieval\nprocess established by the package may have missed a certain date for a\nspecific country (or because Meta skipped them)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Get metadata for 90-day timeframe datasets in the US\nus_90_day_metadata <- get_targeting_metadata(country_code = "US", timeframe = "90")\n\n# View the most recent available dates\nhead(us_90_day_metadata)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"    ## # A tibble: 6 \xd7 3\n    ##   cntry ds         tframe      \n    ##   <chr> <chr>      <chr>       \n    ## 1 US    2025-07-24 last_90_days\n    ## 2 US    2025-07-23 last_90_days\n    ## 3 US    2025-07-22 last_90_days\n    ## 4 US    2025-07-21 last_90_days\n    ## 5 US    2025-07-20 last_90_days\n    ## 6 US    2025-07-18 last_90_days\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once you have identified a dataset you want, you can download it with\n",(0,a.jsx)(n.code,{children:"get_targeting_db()"}),". Note that the archived data is typically available\nwith a delay of a few days. This function allows for powerful\nlongitudinal analysis across thousands of advertisers."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Download the US 90-day targeting dataset from a specific date in the past\nus_targeting_archive <- get_targeting_db(the_cntry = "US", tf = "90", ds = "2025-06-30")\n\n# Inspect the archived data\n# It contains the same structure as the live data, but for thousands of pages\nglimpse(us_targeting_archive)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'    ## Rows: 690,219\n    ## Columns: 37\n    ## $ internal_id              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ no_data                  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ tstamp                   <dttm> 2025-07-04 05:30:28, 2025-07-04 05:30:28, 20\u2026\n    ## $ page_id                  <chr> "761832453834971", "761832453834971", "761832\u2026\n    ## $ cntry                    <chr> "US", "US", "US", "US", "US", "US", "US", "US\u2026\n    ## $ page_name                <chr> "League of Independent Voters of Texas", "Lea\u2026\n    ## $ partyfacts_id            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ sources                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ country                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ party                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ left_right               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ tags                     <glue> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \u2026\n    ## $ tags_ideology            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ disclaimer               <chr> "LEAGUE OF INDEPENDENT VOTERS OF TEXAS", "LEA\u2026\n    ## $ amount_spent_usd         <chr> "405", "405", "405", "405", "405", "405", "40\u2026\n    ## $ number_of_ads_in_library <chr> "14", "14", "14", "14", "14", "14", "14", "14\u2026\n    ## $ date                     <chr> "2025-06-29", "2025-06-29", "2025-06-29", "20\u2026\n    ## $ path                     <chr> "extracted/FacebookAdLibraryReport_2025-06-29\u2026\n    ## $ tf                       <chr> "last_90_days", "last_90_days", "last_90_days\u2026\n    ## $ remove_em                <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL\u2026\n    ## $ total_n                  <int> 35543, 35543, 35543, 35543, 35543, 35543, 355\u2026\n    ## $ amount_spent             <dbl> 405, 405, 405, 405, 405, 405, 405, 405, 405, \u2026\n    ## $ value                    <chr> "All", "Women", "Men", "Bastrop, TX, United S\u2026\n    ## $ num_ads                  <int> 14, 0, 0, 7, 1, 6, 1, 0, 0, 0, 0, 0, 14, 14, \u2026\n    ## $ total_spend_pct          <dbl> 1.00000000, 0.00000000, 0.00000000, 0.6351905\u2026\n    ## $ type                     <chr> "gender", "gender", "gender", "location", "lo\u2026\n    ## $ location_type            <chr> NA, NA, NA, "CITY", "CITY", "countries", "zip\u2026\n    ## $ num_obfuscated           <int> NA, NA, NA, 2, 1, 0, 0, NA, NA, NA, NA, NA, N\u2026\n    ## $ is_exclusion             <lgl> NA, NA, NA, FALSE, FALSE, FALSE, FALSE, NA, N\u2026\n    ## $ custom_audience_type     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n    ## $ ds                       <chr> "2025-06-30", "2025-06-30", "2025-06-30", "20\u2026\n    ## $ main_currency            <chr> "USD", "USD", "USD", "USD", "USD", "USD", "US\u2026\n    ## $ total_num_ads            <int> 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1\u2026\n    ## $ total_spend_formatted    <dbl> 405, 405, 405, 405, 405, 405, 405, 405, 405, \u2026\n    ## $ is_30_day_available      <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRU\u2026\n    ## $ is_90_day_available      <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRU\u2026\n    ## $ detailed_type            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N\u2026\n'})}),"\n",(0,a.jsx)(n.h2,{id:"analyzing-dhs-ad-campaigns-\ufe0f",children:"Analyzing DHS Ad Campaigns \ud83c\udfdb\ufe0f"}),"\n",(0,a.jsxs)(n.p,{children:["Now, let us apply what we have learned in a practical case study. We\nwill analyze the ad campaigns of the U.S. Department of Homeland\nSecurity (DHS) to showcase how to combine historical data and visualize\ntargeting strategies. In this case study we analyze audience segments\nderived from detailed targeting, how spend is allocated across those\nsegments, the county-level geographic focus of the campaign, and which\nother advertisers use DHS-style proxy targeting. If you are interested\nin a similar analysis I have conducted for a recent blog post of mine,\nyou can read the full post ",(0,a.jsx)(n.a,{href:"https://www.favstats.eu/post/dhs/",children:"here"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://www.favstats.eu/img/headers/dhsads.jpg",alt:""}),'\nFigure shows the ads that DHS runs which has DHS secretary Kristi Noem threaten "if you are here illegally we will find and you and deport you" with Spanish subtitles.']}),"\n",(0,a.jsxs)(n.p,{children:["First, we will use ",(0,a.jsx)(n.code,{children:"get_targeting_db()"})," to download two historical\nsnapshots of U.S. ad data. By combining data from different time points,\nwe can create a more comprehensive picture of an advertiser\u2019s strategy\nover a longer period."]}),"\n",(0,a.jsx)(n.h3,{id:"retrieving-and-combining-data",children:"Retrieving and Combining Data"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Download two datasets from different dates\ntargeting_jun <- get_targeting_db(the_cntry = "US", tf = "90", ds = "2025-06-30")\ntargeting_apr <- get_targeting_db(the_cntry = "US", tf = "90", ds = "2025-04-01")\n\n# Combine the datasets and filter for the DHS page\n# The DHS Facebook Page ID is "179587888720522"\ndhs_data_raw <- targeting_jun %>% \n  bind_rows(targeting_apr) %>% \n  filter(page_id == "179587888720522")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The raw data contains spending percentages relative to the total spend\nat the time of each snapshot. To get an accurate picture of the total\nspend over our ",(0,a.jsx)(n.em,{children:"combined period"}),", we need to aggregate the data\ncorrectly. The helper function ",(0,a.jsx)(n.code,{children:"aggr_targeting"})," recalculates the\nspending for each targeting criterion based on the new, combined total."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:"# Apply the function to our DHS data\ndhs_data_agg <- aggr_targeting(dhs_data_raw)\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"Note",type:"hub-note",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aggr_targeting()"})," function creates a variable called ",(0,a.jsx)(n.code,{children:"spend_per"})," which shows the spend per targeting criterion across the combined period. If you pull raw data with ",(0,a.jsx)(n.code,{children:"get_targeting_db()"}),", you have to compute this measure yourself as ",(0,a.jsx)(n.em,{children:"total spending"})," (",(0,a.jsx)(n.code,{children:"total_spend_formatted"}),") ",(0,a.jsx)(n.em,{children:"\xd7"})," ",(0,a.jsx)(n.em,{children:"share of spending"})," (",(0,a.jsx)(n.code,{children:"total_spend_pct"}),")."]})}),"\n",(0,a.jsx)(n.h3,{id:"visualizing-detailed-targeting-criteria",children:'Visualizing "Detailed" Targeting Criteria'}),"\n",(0,a.jsx)(n.p,{children:"One of the most powerful features of this dataset is the ability to see\nthe specific interests and behaviors an advertiser targets \u2013 data that\nis not available via the typical API. Let us visualize what portion of\nthe DHS budget was spent on these \u201cdetailed\u201d targeting criteria."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Filter for "detailed" targeting types and plot the top categories\ndhs_data_agg %>%\n  filter(type == "detailed") %>%\n  # For better labels, combine the type and value\n  mutate(\n    display_value = str_wrap(paste0(str_to_title(detailed_type), ": ", value), width = 40)\n  ) %>%\n  # Keep the top 10 criteria by spend\n  slice_max(order_by = spend_per, n = 10) %>%\n  # Create the plot\n  ggplot(aes(x = spend_per, y = fct_reorder(display_value, spend_per))) +\n  geom_col(fill = "#003366") +\n  geom_text(\n    aes(label = dollar(spend_per, accuracy = 1)),\n    hjust = -0.1,\n    size = 3.5,\n    fontface = "bold"\n  ) +\n  scale_x_continuous(\n    labels = label_dollar(),\n    expand = expansion(mult = c(0, 0.15))\n  ) +\n  labs(\n    title = "DHS Detailed Targeting: Top Spending Categories",\n    subtitle = "Spend on interests, behaviors, and demographic categories on Meta\'s platforms.",\n    x = "Estimated Ad Spend (USD)",\n    y = NULL,\n    caption = "Data Source: Meta Ad Library via metatargetr"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = "plot"\n    )\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(503).A+"",width:"864",height:"480"})}),"\n",(0,a.jsx)(n.p,{children:"This chart clearly shows the specific audience segments the DHS\nprioritized. We can see a significant focus on users who are interested\nin Mexican culture events and music, and whose language is set to\nSpanish. This provides concrete, data-driven insights into their\ncampaign strategy that would be difficult to obtain otherwise."}),"\n",(0,a.jsx)(n.admonition,{title:"Note",type:"hub-note",children:(0,a.jsx)(n.p,{children:"When multiple targeting criteria show identical spend, that likely indicates they were applied together on the same underlying ads. Because the data that is retrieved is aggregated at the advertiser level it is hard to isolate ads that ran simultaneously. For a better measurement of spend we could divide the total spending by the number of targeting criteria that have the same data (same number of ads and spending) by assuming that spending was divided about equally to each targeting criterion."})}),"\n",(0,a.jsx)(n.h3,{id:"visualizing-location-targeting-criteria",children:"Visualizing Location Targeting Criteria"}),"\n",(0,a.jsx)(n.p,{children:"Next, let us analyze where the money was spent. We can filter the data\nfor location targeting and visualize the top-spending counties. This\nreveals the geographic focus of the campaigns."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'# Filter for county-level location targeting and plot the top 15\ndhs_data_agg %>%\n  filter(location_type == "COUNTY") %>%\n  slice_max(order_by = spend_per, n = 15) %>%\n  mutate(\n    location_label = str_remove(value, ", United States")\n  ) %>%\n  ggplot(aes(x = spend_per, y = fct_reorder(location_label, spend_per))) +\n  geom_col(fill = "#c00000") +\n  geom_text(\n    aes(label = dollar(spend_per, accuracy = 1)),\n    hjust = -0.1,\n    size = 3.5,\n    fontface = "bold"\n  ) +\n  scale_x_continuous(\n    labels = label_dollar(),\n    expand = expansion(mult = c(0, 0.15))\n  ) +\n  labs(\n    title = "Top 15 US Counties by DHS Ad Spend",\n    subtitle = "Estimated ad spending by the Department of Homeland Security on Meta\'s platforms.",\n    x = "Estimated Ad Spend (USD)",\n    y = NULL,\n    caption = "Data Source: Meta Ad Library via metatargetr"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = "plot"\n  )\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(1922).A+"",width:"864",height:"480"})}),"\n",(0,a.jsx)(n.p,{children:"This visualization instantly reveals the geographic focus of the DHS\u2019s\nadvertising efforts. The spending is heavily concentrated in major\nmetropolitan area, particularly in states like California, Texas, New\nYork, and Florida with a large share of Latino citizen. This kind of\nanalysis is invaluable for understanding the geographic scope and\nstrategy of public information campaigns."}),"\n",(0,a.jsx)(n.h3,{id:"visualizing-top-10-spenders-using-ethnic-proxies",children:"Visualizing Top 10 Spenders using Ethnic Proxies"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Who else is using targeting these targeting criteria that DHS utilizes\nas proxies to reach the Latino community?"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["First, the detailed targeting criteria used by the DHS ads are filtered,\nand ",(0,a.jsx)(n.em,{children:"all"})," of the data is aggregated."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'latino_targeting <- dhs_data_agg %>% \n  filter(type == "detailed") %>% \n  select(value, type) %>% \n  ## lets remove friends of football fans as that is not related by itself\n  filter(value != "Friends of football fans")\n\nus_aggr <- targeting_jun %>% \n  bind_rows(targeting_apr) %>% \n  inner_join(latino_targeting) %>% \n  aggr_targeting()\n'})}),"\n",(0,a.jsx)(n.p,{children:"Next, I am focusing only on the top 10 spenders that have used these\ntargeting categories."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:"top_10_data_for_plot <- us_aggr %>% \n  distinct(page_id, total_spend) %>% \n  arrange(desc(total_spend)) %>% \n  slice(1:10) %>% select(page_id)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Finally, we can put everything together and reveal who the top spenders\nare:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'us_aggr %>% \n  inner_join(top_10_data_for_plot) %>%\n  mutate(page_name = fct_reorder(page_name, spend_per)) %>% \nggplot(aes(x = page_name,  y = spend_per)) +\n  geom_boxplot() + # geom_col is better for this; position="stack" is default\n  scale_y_continuous(\n    labels = dollar_format(prefix = "$", scale = 1/1000, suffix = "k"),\n    expand = c(0, 0) # Make the bars start at the y-axis\n  ) +\n  labs(\n    title = "Top 10 Advertisers Using DHS\'s \'Latino Proxy\' Targeting",\n    subtitle = "Breakdown of ad spend by detailed targeting criterion",\n    y = "Total Ad Spend (USD)",\n    x = NULL\n  ) +\n  theme_minimal(base_family = "sans") +\n  theme(\n    legend.position = "bottom",\n    panel.grid.major.y = element_blank(), # Cleaner look\n    panel.grid.minor.x = element_blank(),\n    axis.text.y = element_text(face = "bold")\n  ) +\n  coord_flip()\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(7995).A+"",width:"864",height:"480"})}),"\n",(0,a.jsx)(n.p,{children:"Beyond the Department of Homeland Security, the analysis reveals that\nthe targeting criteria used as proxies for the Latino community are also\nemployed by a diverse range of other major advertisers. The top 10\nspenders using these methods include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Public Health & Advocacy Groups:"})," Organizations like Planned\nParenthood, Tobacco Free Florida, and The California Endowment use\nthis targeting for outreach and awareness campaigns."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Non-Profits and Charities:"})," Pages such as Catholic Relief Services,\nOperation Smile, and The International Fellowship of Christians and\nJews appear to use these criteria for fundraising and supporter\nengagement."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This confirms that while the DHS campaign is unique in its scale and\nmessaging, the underlying methods for reaching the Latino community are\ncommon tools used by a wide array of organizations across the non-profit\nand public health sectors."}),"\n",(0,a.jsxs)(n.h2,{id:"a-glimpse-into-other-metatargetr-features",children:["A Glimpse into Other ",(0,a.jsx)(n.code,{children:"metatargetr"})," Features"]}),"\n",(0,a.jsxs)(n.p,{children:["Beyond its core focus on targeting, ",(0,a.jsx)(n.code,{children:"metatargetr"})," includes a suite of\nfunctions for retrieving other valuable types of data, enabling a more\nholistic analysis of digital advertising. Below is a very short showcase\nof them:"]}),"\n",(0,a.jsx)(n.h3,{id:"facebook-and-instagram-page-information",children:"Facebook and Instagram Page Information"}),"\n",(0,a.jsxs)(n.p,{children:["To complement the targeting data, you can retrieve detailed metadata\nabout Facebook pages, such as like counts, creation dates, and contact\ninformation, using ",(0,a.jsx)(n.code,{children:"get_page_insights()"}),". For historical page\ninformation and from many pages at once, the package also offers\n",(0,a.jsx)(n.code,{children:"get_page_info_db()"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'dhs_page_info <- get_page_insights(pageid = "179587888720522", include_info = "page_info")\n\nglimpse(dhs_page_info)\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'    ## Rows: 1\n    ## Columns: 24\n    ## $ page_name              <chr> "Department of Homeland Security"\n    ## $ is_profile_page        <chr> "FALSE"\n    ## $ page_is_deleted        <chr> "FALSE"\n    ## $ page_is_restricted     <chr> "FALSE"\n    ## $ has_blank_ads          <chr> "FALSE"\n    ## $ hidden_ads             <chr> "0"\n    ## $ page_profile_uri       <chr> "https://facebook.com/homelandsecurity"\n    ## $ page_id                <chr> "179587888720522"\n    ## $ page_verification      <chr> "BLUE_VERIFIED"\n    ## $ entity_type            <chr> "PERSON_PROFILE"\n    ## $ page_alias             <chr> "homelandsecurity"\n    ## $ likes                  <chr> "1011008"\n    ## $ page_category          <chr> "Government organisation"\n    ## $ ig_verification        <chr> "TRUE"\n    ## $ ig_username            <chr> "dhsgov"\n    ## $ ig_followers           <chr> "313631"\n    ## $ shared_disclaimer_info <chr> "[]"\n    ## $ about                  <chr> "Official Facebook page of the U.S. Department \u2026\n    ## $ event                  <chr> "CREATION: 2010-12-01 20:39:04"\n    ## $ city                   <chr> "Washington"\n    ## $ country                <chr> "United States of America"\n    ## $ postal_code            <chr> "20528"\n    ## $ state                  <chr> "DC"\n    ## $ phone_number           <chr> "+12022817828"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"google-ad-data",children:"Google Ad Data"}),"\n",(0,a.jsx)(n.p,{children:"The package is not limited to Meta. While outside the scope of this\ntutorial, functions exist to retrieve spending data from Google\u2019s Ad\nLibrary, allowing for powerful cross-platform comparisons."}),"\n",(0,a.jsxs)(n.p,{children:["For example, the ",(0,a.jsx)(n.code,{children:"get_ggl_ads"})," function can get different tables that\nare provided by the Google Ad Transparency report, such as statistics on\nweekly spending per advertiser:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-r",children:'get_ggl_ads("weekly_spend") %>% \n  glimpse()\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'    ## \u2139 Downloading data bundle from Google... (This may take a moment)\n\n    ## \u2714 Download complete. Extracting files...\n\n    ## \u2139 Reading data from \'google-political-ads-advertiser-weekly-spend.csv\'...\n\n    ## indexing google-political-ads-advertiser-weekly-spend.csv [] 963.60GB/s, eta:  0s                                                                                indexing google-political-ads-advertiser-weekly-spend.csv [=] 1.09GB/s, eta:  0s                                                                                \n\n    ## \u2714 Processing complete.\n\n    ## Rows: 296,883\n    ## Columns: 24\n    ## $ Advertiser_ID   <chr> "AR00000475401340059649", "AR00000475401340059649", "A\u2026\n    ## $ Advertiser_Name <chr> "Vince Leach for Senate", "Vince Leach for Senate", "V\u2026\n    ## $ Election_Cycle  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA\u2026\n    ## $ Week_Start_Date <date> 2020-08-23, 2020-08-30, 2020-09-06, 2020-09-13, 2020-\u2026\n    ## $ Spend_USD       <dbl> 400, 500, 400, 400, 200, 400, 400, 300, 300, 300, 200,\u2026\n    ## $ Spend_EUR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_INR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_BGN       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_CZK       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_DKK       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_HUF       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_PLN       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_RON       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_SEK       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_GBP       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_NZD       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_ILS       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_AUD       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_TWD       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_BRL       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_ARS       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_ZAR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_CLP       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n    ## $ Spend_MXN       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \u2026\n'})}),"\n",(0,a.jsxs)(n.p,{children:["These functions transform ",(0,a.jsx)(n.code,{children:"metatargetr"})," from a simple targeting tool\ninto a comprehensive ad intelligence package."]}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"metatargetr"})," package provides a powerful and accessible toolkit for\nresearchers, journalists, and analysts looking to explore the nuances of\ndigital advertising on digital platforms. As this tutorial has shown, by\nfetching and aggregating historical data, you can quickly move from raw\nnumbers to compelling visualizations that uncover the strategic\ndecisions behind major ad campaigns."]}),"\n",(0,a.jsxs)(n.p,{children:["By offering a direct line to targeting data, both live and historical,\nand equipping users with the tools to analyze it effectively,\n",(0,a.jsx)(n.code,{children:"metatargetr"})," opens new avenues for understanding campaign strategies\nand their societal impact. Happy researching!"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}function g(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1345:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/votta-efa52a1637cf5ac9d2c3d87490fc1e4f.jpg"},503:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/unnamed-chunk-10-1-244f3cfd332b8d2d8a1d17360fa30e7b.png"},1922:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/unnamed-chunk-11-1-4251952ff98bdeba659327cc3902b5be.png"},7995:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/unnamed-chunk-14-1-522184d405e5eae55656833a7239f3cb.png"}}]);